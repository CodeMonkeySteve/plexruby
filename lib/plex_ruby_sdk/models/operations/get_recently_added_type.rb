# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module PlexRubySDK
  module Operations
  

    class GetRecentlyAddedType < ::PlexRubySDK::Utils::FieldAugmented
      extend T::Sig


      field :active, T::Boolean, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('active') } }

      field :key, ::String, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('key') } }

      field :title, ::String, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('title') } }

      field :type, ::String, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('type') } }

      field :field, T.nilable(T::Array[::PlexRubySDK::Operations::GetRecentlyAddedField]), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('Field') } }

      field :filter, T.nilable(T::Array[::PlexRubySDK::Operations::GetRecentlyAddedFilter]), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('Filter') } }

      field :sort, T.nilable(T::Array[::PlexRubySDK::Operations::GetRecentlyAddedSort]), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('Sort') } }


      sig { params(active: T::Boolean, key: ::String, title: ::String, type: ::String, field: T.nilable(T::Array[::PlexRubySDK::Operations::GetRecentlyAddedField]), filter: T.nilable(T::Array[::PlexRubySDK::Operations::GetRecentlyAddedFilter]), sort: T.nilable(T::Array[::PlexRubySDK::Operations::GetRecentlyAddedSort])).void }
      def initialize(active: nil, key: nil, title: nil, type: nil, field: nil, filter: nil, sort: nil)
        @active = active
        @key = key
        @title = title
        @type = type
        @field = field
        @filter = filter
        @sort = sort
      end
    end
  end
end
