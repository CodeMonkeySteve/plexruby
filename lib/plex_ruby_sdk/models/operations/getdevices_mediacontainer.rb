# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module PlexRubySDK
  module Models
    module Operations
    

      class GetDevicesMediaContainer
        extend T::Sig
        include Crystalline::MetadataFields


        field :device, T.nilable(T::Array[Models::Operations::Device]), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('Device') } }

        field :identifier, T.nilable(::String), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('identifier') } }

        field :size, T.nilable(::Float), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('size') } }


        sig { params(device: T.nilable(T::Array[Models::Operations::Device]), identifier: T.nilable(::String), size: T.nilable(::Float)).void }
        def initialize(device: nil, identifier: nil, size: nil)
          @device = device
          @identifier = identifier
          @size = size
        end

        def ==(other)
          return false unless other.is_a? self.class
          return false unless @device == other.device
          return false unless @identifier == other.identifier
          return false unless @size == other.size
          true
        end
      end
    end
  end
end
