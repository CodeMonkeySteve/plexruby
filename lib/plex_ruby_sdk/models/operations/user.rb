# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module PlexRubySDK
  module Models
    module Operations
      USER_SERVERS = [
        'https://plex.tv/api'
      ].freeze
    

      class User
        extend T::Sig
        include Crystalline::MetadataFields


        field :allow_camera_upload, Models::Operations::AllowCameraUpload

        field :allow_channels, Models::Operations::AllowChannels

        field :allow_subtitle_admin, Models::Operations::AllowSubtitleAdmin

        field :allow_sync, Models::Operations::AllowSync

        field :allow_tuners, Models::Operations::AllowTuners
        # User's email address.
        field :email, ::String

        field :home, Models::Operations::Home
        # User's unique ID.
        field :id, ::Integer

        field :protected, Models::Operations::Protected

        field :restricted, Models::Operations::Restricted
        # List of servers owned by the user.
        field :server, T::Array[Models::Operations::GetUsersServer]
        # URL to the user's avatar image.
        field :thumb, ::String
        # User's display name.
        field :title, ::String
        # User's username.
        field :username, ::String
        # Filters applied for all content.
        field :filter_all, T.nilable(::String)
        # Filters applied for movies.
        field :filter_movies, T.nilable(::String)
        # Filters applied for music.
        field :filter_music, T.nilable(::String)
        # Filters applied for photos.
        field :filter_photos, T.nilable(::String)
        # Filters applied for television.
        field :filter_television, T.nilable(::String)
        # ID of the user's recommendation playlist.
        field :recommendations_playlist_id, T.nilable(::String)


        sig { params(allow_camera_upload: Models::Operations::AllowCameraUpload, allow_channels: Models::Operations::AllowChannels, allow_subtitle_admin: Models::Operations::AllowSubtitleAdmin, allow_sync: Models::Operations::AllowSync, allow_tuners: Models::Operations::AllowTuners, email: ::String, home: Models::Operations::Home, id: ::Integer, protected: Models::Operations::Protected, restricted: Models::Operations::Restricted, server: T::Array[Models::Operations::GetUsersServer], thumb: ::String, title: ::String, username: ::String, filter_all: T.nilable(::String), filter_movies: T.nilable(::String), filter_music: T.nilable(::String), filter_photos: T.nilable(::String), filter_television: T.nilable(::String), recommendations_playlist_id: T.nilable(::String)).void }
        def initialize(allow_camera_upload: nil, allow_channels: nil, allow_subtitle_admin: nil, allow_sync: nil, allow_tuners: nil, email: nil, home: nil, id: nil, protected: nil, restricted: nil, server: nil, thumb: nil, title: nil, username: nil, filter_all: nil, filter_movies: nil, filter_music: nil, filter_photos: nil, filter_television: nil, recommendations_playlist_id: nil)
          @allow_camera_upload = allow_camera_upload
          @allow_channels = allow_channels
          @allow_subtitle_admin = allow_subtitle_admin
          @allow_sync = allow_sync
          @allow_tuners = allow_tuners
          @email = email
          @home = home
          @id = id
          @protected = protected
          @restricted = restricted
          @server = server
          @thumb = thumb
          @title = title
          @username = username
          @filter_all = filter_all
          @filter_movies = filter_movies
          @filter_music = filter_music
          @filter_photos = filter_photos
          @filter_television = filter_television
          @recommendations_playlist_id = recommendations_playlist_id
        end

        def ==(other)
          return false unless other.is_a? self.class
          return false unless @allow_camera_upload == other.allow_camera_upload
          return false unless @allow_channels == other.allow_channels
          return false unless @allow_subtitle_admin == other.allow_subtitle_admin
          return false unless @allow_sync == other.allow_sync
          return false unless @allow_tuners == other.allow_tuners
          return false unless @email == other.email
          return false unless @home == other.home
          return false unless @id == other.id
          return false unless @protected == other.protected
          return false unless @restricted == other.restricted
          return false unless @server == other.server
          return false unless @thumb == other.thumb
          return false unless @title == other.title
          return false unless @username == other.username
          return false unless @filter_all == other.filter_all
          return false unless @filter_movies == other.filter_movies
          return false unless @filter_music == other.filter_music
          return false unless @filter_photos == other.filter_photos
          return false unless @filter_television == other.filter_television
          return false unless @recommendations_playlist_id == other.recommendations_playlist_id
          true
        end
      end
    end
  end
end
