# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module PlexRubySDK
  module Operations
  

    class GetUpdateStatusMediaContainer < ::Crystalline::FieldAugmented
      extend T::Sig


      field :can_install, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('canInstall') } }

      field :checked_at, T.nilable(::Integer), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('checkedAt') } }

      field :download_url, T.nilable(::String), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('downloadURL') } }

      field :release, T.nilable(T::Array[::PlexRubySDK::Operations::Release]), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('Release') } }

      field :size, T.nilable(::Integer), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('size') } }

      field :status, T.nilable(::Integer), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('status') } }


      sig { params(can_install: T.nilable(T::Boolean), checked_at: T.nilable(::Integer), download_url: T.nilable(::String), release: T.nilable(T::Array[::PlexRubySDK::Operations::Release]), size: T.nilable(::Integer), status: T.nilable(::Integer)).void }
      def initialize(can_install: nil, checked_at: nil, download_url: nil, release: nil, size: nil, status: nil)
        @can_install = can_install
        @checked_at = checked_at
        @download_url = download_url
        @release = release
        @size = size
        @status = status
      end
    end
  end
end
