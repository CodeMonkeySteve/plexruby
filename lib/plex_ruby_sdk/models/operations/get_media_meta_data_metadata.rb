# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module PlexRubySDK
  module Models
    module Operations
    

      class GetMediaMetaDataMetadata
        extend T::Sig
        include Crystalline::MetadataFields


        field :added_at, ::Integer, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('addedAt') } }
        # URL of the art image.
        field :art, ::String, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('art') } }
        # Duration of the content in milliseconds.
        field :duration, ::Integer, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('duration') } }
        # The globally unique identifier for the item.
        field :guid, ::String, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('guid') } }
        # An array of image objects.
        field :image, T::Array[Models::Operations::GetMediaMetaDataImage], { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('Image') } }
        # The API key to access metadata details.
        field :key, ::String, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('key') } }
        # The ID of the library section.
        field :library_section_id, ::Integer, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('librarySectionID') } }
        # The key of the library section.
        field :library_section_key, ::String, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('librarySectionKey') } }
        # The title of the library section.
        field :library_section_title, ::String, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('librarySectionTitle') } }
        # The rating key of the metadata item.
        field :rating_key, ::String, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('ratingKey') } }
        # A summary of the content.
        field :summary, ::String, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('summary') } }
        # URL of the thumbnail image.
        field :thumb, ::String, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('thumb') } }
        # The title of the content.
        field :title, ::String, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('title') } }
        # The type of content (e.g., show, movie).
        field :type, ::String, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('type') } }

        field :ultra_blur_colors, Models::Operations::GetMediaMetaDataUltraBlurColors, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('UltraBlurColors') } }

        field :updated_at, ::Integer, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('updatedAt') } }
        # The release year.
        field :year, ::Integer, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('year') } }
        # The audience rating for the content.
        field :audience_rating, T.nilable(::Float), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('audienceRating') } }
        # The URL for the audience rating image.
        field :audience_rating_image, T.nilable(::String), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('audienceRatingImage') } }

        field :chapter_source, T.nilable(::String), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('chapterSource') } }
        # The number of child items.
        field :child_count, T.nilable(::Integer), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('childCount') } }
        # The content rating (e.g., TV-MA).
        field :content_rating, T.nilable(::String), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('contentRating') } }
        # An array of country tags.
        field :country, T.nilable(T::Array[Models::Operations::GetMediaMetaDataCountry]), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('Country') } }
        # An array of Director roles.
        field :director, T.nilable(T::Array[Models::Operations::GetMediaMetaDataDirector]), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('Director') } }
        # An array of genre tags.
        field :genre, T.nilable(T::Array[Models::Operations::GetMediaMetaDataGenre]), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('Genre') } }
        # The URL of the grandparent's art image.
        field :grandparent_art, T.nilable(::String), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('grandparentArt') } }
        # A GUID identifying the grandparent entity (e.g., show).
        field :grandparent_guid, T.nilable(::String), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('grandparentGuid') } }
        # A key identifying the grandparent metadata in the library.
        field :grandparent_key, T.nilable(::String), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('grandparentKey') } }
        # The rating key of the grandparent of this metadata item.
        field :grandparent_rating_key, T.nilable(::String), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('grandparentRatingKey') } }
        # A URL-friendly identifier (slug) for the grandparent entity.
        field :grandparent_slug, T.nilable(::String), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('grandparentSlug') } }
        # The URL of the grandparent's thumbnail image.
        field :grandparent_thumb, T.nilable(::String), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('grandparentThumb') } }
        # The title of the grandparent entity (typically the show's title).
        field :grandparent_title, T.nilable(::String), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('grandparentTitle') } }
        # An array of GUID objects.
        field :guids, T.nilable(T::Array[Models::Operations::GetMediaMetaDataGuids]), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('Guid') } }
        # The index or order of the item.
        field :index, T.nilable(::Integer), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('index') } }
        # Unix timestamp of when the item was last viewed.
        field :last_viewed_at, T.nilable(::Integer), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('lastViewedAt') } }
        # The total number of episodes (or leaves).
        field :leaf_count, T.nilable(::Integer), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('leafCount') } }
        # An array of location objects.
        field :location, T.nilable(T::Array[Models::Operations::GetMediaMetaDataLocation]), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('Location') } }

        field :media, T.nilable(T::Array[Models::Operations::GetMediaMetaDataMedia]), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('Media') } }
        # The original release date.
        field :originally_available_at, T.nilable(::Date), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('originallyAvailableAt'), 'decoder': Utils.date_from_iso_format(true) } }
        # The original title of the content.
        field :original_title, T.nilable(::String), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('originalTitle') } }
        # A GUID identifying the parent entity (e.g., season) for the item.
        field :parent_guid, T.nilable(::String), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('parentGuid') } }
        # The index number of the parent entity, which could indicate its order or position.
        field :parent_index, T.nilable(::Integer), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('parentIndex') } }
        # A key identifying the parent metadata in the library.
        field :parent_key, T.nilable(::String), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('parentKey') } }
        # The rating key of the parent of this metadata item.
        field :parent_rating_key, T.nilable(::String), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('parentRatingKey') } }
        # The URL of the parent's thumbnail image.
        field :parent_thumb, T.nilable(::String), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('parentThumb') } }
        # The title of the parent entity (typically the season's title).
        field :parent_title, T.nilable(::String), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('parentTitle') } }

        field :primary_extra_key, T.nilable(::String), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('primaryExtraKey') } }
        # An array of Writer roles.
        field :producer, T.nilable(T::Array[Models::Operations::GetMediaMetaDataProducer]), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('Producer') } }
        # The general rating
        field :rating, T.nilable(::Float), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('rating') } }
        # The URL or identifier for the rating image (e.g., Rotten Tomatoes rating image).
        field :rating_image, T.nilable(::String), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('ratingImage') } }
        # An array of rating objects.
        field :ratings, T.nilable(T::Array[Models::Operations::Ratings]), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('Rating') } }
        # An array of Actor roles.
        field :role, T.nilable(T::Array[Models::Operations::GetMediaMetaDataRole]), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('Role') } }
        # An array of similar content objects.
        field :similar, T.nilable(T::Array[Models::Operations::GetMediaMetaDataSimilar]), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('Similar') } }
        # The number of times the item has been skipped.
        field :skip_count, T.nilable(::Integer), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('skipCount') } }
        # A URL-friendly identifier for the item.
        field :slug, T.nilable(::String), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('slug') } }
        # The studio that produced the content.
        field :studio, T.nilable(::String), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('studio') } }
        # The tagline of the content.
        field :tagline, T.nilable(::String), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('tagline') } }
        # URL of the theme image.
        field :theme, T.nilable(::String), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('theme') } }
        # The number of times the item has been viewed.
        field :view_count, T.nilable(::Integer), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('viewCount') } }
        # The number of episodes that have been viewed.
        field :viewed_leaf_count, T.nilable(::Integer), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('viewedLeafCount') } }
        # An array of Writer roles.
        field :writer, T.nilable(T::Array[Models::Operations::GetMediaMetaDataWriter]), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('Writer') } }


        sig { params(added_at: ::Integer, art: ::String, duration: ::Integer, guid: ::String, image: T::Array[Models::Operations::GetMediaMetaDataImage], key: ::String, library_section_id: ::Integer, library_section_key: ::String, library_section_title: ::String, rating_key: ::String, summary: ::String, thumb: ::String, title: ::String, type: ::String, ultra_blur_colors: Models::Operations::GetMediaMetaDataUltraBlurColors, updated_at: ::Integer, year: ::Integer, audience_rating: T.nilable(::Float), audience_rating_image: T.nilable(::String), chapter_source: T.nilable(::String), child_count: T.nilable(::Integer), content_rating: T.nilable(::String), country: T.nilable(T::Array[Models::Operations::GetMediaMetaDataCountry]), director: T.nilable(T::Array[Models::Operations::GetMediaMetaDataDirector]), genre: T.nilable(T::Array[Models::Operations::GetMediaMetaDataGenre]), grandparent_art: T.nilable(::String), grandparent_guid: T.nilable(::String), grandparent_key: T.nilable(::String), grandparent_rating_key: T.nilable(::String), grandparent_slug: T.nilable(::String), grandparent_thumb: T.nilable(::String), grandparent_title: T.nilable(::String), guids: T.nilable(T::Array[Models::Operations::GetMediaMetaDataGuids]), index: T.nilable(::Integer), last_viewed_at: T.nilable(::Integer), leaf_count: T.nilable(::Integer), location: T.nilable(T::Array[Models::Operations::GetMediaMetaDataLocation]), media: T.nilable(T::Array[Models::Operations::GetMediaMetaDataMedia]), originally_available_at: T.nilable(::Date), original_title: T.nilable(::String), parent_guid: T.nilable(::String), parent_index: T.nilable(::Integer), parent_key: T.nilable(::String), parent_rating_key: T.nilable(::String), parent_thumb: T.nilable(::String), parent_title: T.nilable(::String), primary_extra_key: T.nilable(::String), producer: T.nilable(T::Array[Models::Operations::GetMediaMetaDataProducer]), rating: T.nilable(::Float), rating_image: T.nilable(::String), ratings: T.nilable(T::Array[Models::Operations::Ratings]), role: T.nilable(T::Array[Models::Operations::GetMediaMetaDataRole]), similar: T.nilable(T::Array[Models::Operations::GetMediaMetaDataSimilar]), skip_count: T.nilable(::Integer), slug: T.nilable(::String), studio: T.nilable(::String), tagline: T.nilable(::String), theme: T.nilable(::String), view_count: T.nilable(::Integer), viewed_leaf_count: T.nilable(::Integer), writer: T.nilable(T::Array[Models::Operations::GetMediaMetaDataWriter])).void }
        def initialize(added_at: nil, art: nil, duration: nil, guid: nil, image: nil, key: nil, library_section_id: nil, library_section_key: nil, library_section_title: nil, rating_key: nil, summary: nil, thumb: nil, title: nil, type: nil, ultra_blur_colors: nil, updated_at: nil, year: nil, audience_rating: nil, audience_rating_image: nil, chapter_source: nil, child_count: nil, content_rating: nil, country: nil, director: nil, genre: nil, grandparent_art: nil, grandparent_guid: nil, grandparent_key: nil, grandparent_rating_key: nil, grandparent_slug: nil, grandparent_thumb: nil, grandparent_title: nil, guids: nil, index: nil, last_viewed_at: nil, leaf_count: nil, location: nil, media: nil, originally_available_at: nil, original_title: nil, parent_guid: nil, parent_index: nil, parent_key: nil, parent_rating_key: nil, parent_thumb: nil, parent_title: nil, primary_extra_key: nil, producer: nil, rating: nil, rating_image: nil, ratings: nil, role: nil, similar: nil, skip_count: nil, slug: nil, studio: nil, tagline: nil, theme: nil, view_count: nil, viewed_leaf_count: nil, writer: nil)
          @added_at = added_at
          @art = art
          @duration = duration
          @guid = guid
          @image = image
          @key = key
          @library_section_id = library_section_id
          @library_section_key = library_section_key
          @library_section_title = library_section_title
          @rating_key = rating_key
          @summary = summary
          @thumb = thumb
          @title = title
          @type = type
          @ultra_blur_colors = ultra_blur_colors
          @updated_at = updated_at
          @year = year
          @audience_rating = audience_rating
          @audience_rating_image = audience_rating_image
          @chapter_source = chapter_source
          @child_count = child_count
          @content_rating = content_rating
          @country = country
          @director = director
          @genre = genre
          @grandparent_art = grandparent_art
          @grandparent_guid = grandparent_guid
          @grandparent_key = grandparent_key
          @grandparent_rating_key = grandparent_rating_key
          @grandparent_slug = grandparent_slug
          @grandparent_thumb = grandparent_thumb
          @grandparent_title = grandparent_title
          @guids = guids
          @index = index
          @last_viewed_at = last_viewed_at
          @leaf_count = leaf_count
          @location = location
          @media = media
          @originally_available_at = originally_available_at
          @original_title = original_title
          @parent_guid = parent_guid
          @parent_index = parent_index
          @parent_key = parent_key
          @parent_rating_key = parent_rating_key
          @parent_thumb = parent_thumb
          @parent_title = parent_title
          @primary_extra_key = primary_extra_key
          @producer = producer
          @rating = rating
          @rating_image = rating_image
          @ratings = ratings
          @role = role
          @similar = similar
          @skip_count = skip_count
          @slug = slug
          @studio = studio
          @tagline = tagline
          @theme = theme
          @view_count = view_count
          @viewed_leaf_count = viewed_leaf_count
          @writer = writer
        end

        def ==(other)
          return false unless other.is_a? self.class
          return false unless @added_at == other.added_at
          return false unless @art == other.art
          return false unless @duration == other.duration
          return false unless @guid == other.guid
          return false unless @image == other.image
          return false unless @key == other.key
          return false unless @library_section_id == other.library_section_id
          return false unless @library_section_key == other.library_section_key
          return false unless @library_section_title == other.library_section_title
          return false unless @rating_key == other.rating_key
          return false unless @summary == other.summary
          return false unless @thumb == other.thumb
          return false unless @title == other.title
          return false unless @type == other.type
          return false unless @ultra_blur_colors == other.ultra_blur_colors
          return false unless @updated_at == other.updated_at
          return false unless @year == other.year
          return false unless @audience_rating == other.audience_rating
          return false unless @audience_rating_image == other.audience_rating_image
          return false unless @chapter_source == other.chapter_source
          return false unless @child_count == other.child_count
          return false unless @content_rating == other.content_rating
          return false unless @country == other.country
          return false unless @director == other.director
          return false unless @genre == other.genre
          return false unless @grandparent_art == other.grandparent_art
          return false unless @grandparent_guid == other.grandparent_guid
          return false unless @grandparent_key == other.grandparent_key
          return false unless @grandparent_rating_key == other.grandparent_rating_key
          return false unless @grandparent_slug == other.grandparent_slug
          return false unless @grandparent_thumb == other.grandparent_thumb
          return false unless @grandparent_title == other.grandparent_title
          return false unless @guids == other.guids
          return false unless @index == other.index
          return false unless @last_viewed_at == other.last_viewed_at
          return false unless @leaf_count == other.leaf_count
          return false unless @location == other.location
          return false unless @media == other.media
          return false unless @originally_available_at == other.originally_available_at
          return false unless @original_title == other.original_title
          return false unless @parent_guid == other.parent_guid
          return false unless @parent_index == other.parent_index
          return false unless @parent_key == other.parent_key
          return false unless @parent_rating_key == other.parent_rating_key
          return false unless @parent_thumb == other.parent_thumb
          return false unless @parent_title == other.parent_title
          return false unless @primary_extra_key == other.primary_extra_key
          return false unless @producer == other.producer
          return false unless @rating == other.rating
          return false unless @rating_image == other.rating_image
          return false unless @ratings == other.ratings
          return false unless @role == other.role
          return false unless @similar == other.similar
          return false unless @skip_count == other.skip_count
          return false unless @slug == other.slug
          return false unless @studio == other.studio
          return false unless @tagline == other.tagline
          return false unless @theme == other.theme
          return false unless @view_count == other.view_count
          return false unless @viewed_leaf_count == other.viewed_leaf_count
          return false unless @writer == other.writer
          true
        end
      end
    end
  end
end
