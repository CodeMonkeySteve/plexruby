# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module PlexRubySDK
  module Operations
  

    class Session < ::Crystalline::FieldAugmented
      extend T::Sig


      field :bandwidth, T.nilable(::Integer), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('bandwidth') } }

      field :id, T.nilable(::String), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('id') } }

      field :location, T.nilable(::String), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('location') } }


      sig { params(bandwidth: T.nilable(::Integer), id: T.nilable(::String), location: T.nilable(::String)).void }
      def initialize(bandwidth: nil, id: nil, location: nil)
        @bandwidth = bandwidth
        @id = id
        @location = location
      end
    end
  end
end
