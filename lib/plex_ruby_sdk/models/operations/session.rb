# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module PlexRubySDK
  module Models
    module Operations
    

      class Session
        extend T::Sig
        include Crystalline::MetadataFields


        field :bandwidth, T.nilable(::Integer), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('bandwidth') } }

        field :id, T.nilable(::String), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('id') } }

        field :location, T.nilable(::String), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('location') } }


        sig { params(bandwidth: T.nilable(::Integer), id: T.nilable(::String), location: T.nilable(::String)).void }
        def initialize(bandwidth: nil, id: nil, location: nil)
          @bandwidth = bandwidth
          @id = id
          @location = location
        end

        def ==(other)
          return false unless other.is_a? self.class
          return false unless @bandwidth == other.bandwidth
          return false unless @id == other.id
          return false unless @location == other.location
          true
        end
      end
    end
  end
end
