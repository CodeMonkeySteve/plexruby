# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module PlexRubySDK
  module Models
    module Operations
    

      class GetMediaArtsMetadata
        extend T::Sig
        include Crystalline::MetadataFields

        # The URL of the artwork.
        field :key, ::String, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('key') } }
        # The URL of the artwork.
        field :rating_key, ::String, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('ratingKey') } }
        # Whether this is the selected artwork.
        field :selected, T::Boolean, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('selected') } }
        # The URL of the artwork thumbnail.
        field :thumb, ::String, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('thumb') } }
        # The provider of the artwork.
        field :provider, T.nilable(::String), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('provider') } }


        sig { params(key: ::String, rating_key: ::String, selected: T::Boolean, thumb: ::String, provider: T.nilable(::String)).void }
        def initialize(key: nil, rating_key: nil, selected: nil, thumb: nil, provider: nil)
          @key = key
          @rating_key = rating_key
          @selected = selected
          @thumb = thumb
          @provider = provider
        end

        def ==(other)
          return false unless other.is_a? self.class
          return false unless @key == other.key
          return false unless @rating_key == other.rating_key
          return false unless @selected == other.selected
          return false unless @thumb == other.thumb
          return false unless @provider == other.provider
          true
        end
      end
    end
  end
end
