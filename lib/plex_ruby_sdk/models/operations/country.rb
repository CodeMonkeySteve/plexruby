# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module PlexRubySDK
  module Operations
  
    # The filter query string for country media items.
    class Country < ::Crystalline::FieldAugmented
      extend T::Sig


      field :id, ::Integer, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('id') } }
      # The country of origin of this media item
      field :tag, ::String, { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('tag') } }

      field :filter, T.nilable(::String), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('filter') } }


      sig { params(id: ::Integer, tag: ::String, filter: T.nilable(::String)).void }
      def initialize(id: nil, tag: nil, filter: nil)
        @id = id
        @tag = tag
        @filter = filter
      end

      def ==(other)
        return false unless other.is_a? self.class
        return false unless @id == other.id
        return false unless @tag == other.tag
        return false unless @filter == other.filter
        true
      end
    end
  end
end
