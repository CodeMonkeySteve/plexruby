# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module PlexRubySDK
  module Models
    module Operations
    

      class Directory
        extend T::Sig
        include Crystalline::MetadataFields


        field :count, T.nilable(::Float), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('count') } }

        field :key, T.nilable(::String), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('key') } }

        field :title, T.nilable(::String), { 'format_json': { 'letter_case': ::PlexRubySDK::Utils.field_name('title') } }


        sig { params(count: T.nilable(::Float), key: T.nilable(::String), title: T.nilable(::String)).void }
        def initialize(count: nil, key: nil, title: nil)
          @count = count
          @key = key
          @title = title
        end

        def ==(other)
          return false unless other.is_a? self.class
          return false unless @count == other.count
          return false unless @key == other.key
          return false unless @title == other.title
          true
        end
      end
    end
  end
end
