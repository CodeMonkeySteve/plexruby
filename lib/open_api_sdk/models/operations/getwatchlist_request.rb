# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Operations
    GET_WATCHLIST_REQUEST_SERVERS = [
      'https://metadata.provider.plex.tv'
    ].freeze
  

    class GetWatchlistRequest < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # Filter
      field :filter, ::OpenApiSDK::Operations::PathParamFilter, { 'path_param': { 'field_name': 'filter', 'style': 'simple', 'explode': false } }
      # User Token
      field :x_plex_token, ::String, { 'query_param': { 'field_name': 'X-Plex-Token', 'style': 'form', 'explode': true } }
      # include collections in the results
      # 
      field :include_collections, T.nilable(::OpenApiSDK::Operations::IncludeCollections), { 'query_param': { 'field_name': 'includeCollections', 'style': 'form', 'explode': true } }
      # include external media in the results
      # 
      field :include_external_media, T.nilable(::OpenApiSDK::Operations::IncludeExternalMedia), { 'query_param': { 'field_name': 'includeExternalMedia', 'style': 'form', 'explode': true } }
      # The type of library to filter. Can be "movie" or "show", or all if not present.
      # 
      field :libtype, T.nilable(::OpenApiSDK::Operations::Libtype), { 'query_param': { 'field_name': 'libtype', 'style': 'form', 'explode': true } }
      # The number of items to return. If not specified, all items will be returned.
      # If the number of items exceeds the limit, the response will be paginated.
      # 
      field :maxresults, T.nilable(::Integer), { 'query_param': { 'field_name': 'maxresults', 'style': 'form', 'explode': true } }
      # In the format "field:dir". Available fields are "watchlistedAt" (Added At),
      # "titleSort" (Title), "originallyAvailableAt" (Release Date), or "rating" (Critic Rating).
      # "dir" can be "asc" or "desc"
      # 
      field :sort, T.nilable(::String), { 'query_param': { 'field_name': 'sort', 'style': 'form', 'explode': true } }
      # The number of items to return. If not specified, all items will be returned.
      # If the number of items exceeds the limit, the response will be paginated.
      # 
      field :x_plex_container_size, T.nilable(::Integer), { 'query_param': { 'field_name': 'X-Plex-Container-Size', 'style': 'form', 'explode': true } }
      # The index of the first item to return. If not specified, the first item will be returned.
      # If the number of items exceeds the limit, the response will be paginated.
      # 
      field :x_plex_container_start, T.nilable(::Integer), { 'query_param': { 'field_name': 'X-Plex-Container-Start', 'style': 'form', 'explode': true } }


      sig { params(filter: ::OpenApiSDK::Operations::PathParamFilter, x_plex_token: ::String, include_collections: T.nilable(::OpenApiSDK::Operations::IncludeCollections), include_external_media: T.nilable(::OpenApiSDK::Operations::IncludeExternalMedia), libtype: T.nilable(::OpenApiSDK::Operations::Libtype), maxresults: T.nilable(::Integer), sort: T.nilable(::String), x_plex_container_size: T.nilable(::Integer), x_plex_container_start: T.nilable(::Integer)).void }
      def initialize(filter: nil, x_plex_token: nil, include_collections: nil, include_external_media: nil, libtype: nil, maxresults: nil, sort: nil, x_plex_container_size: nil, x_plex_container_start: nil)
        @filter = filter
        @x_plex_token = x_plex_token
        @include_collections = include_collections
        @include_external_media = include_external_media
        @libtype = libtype
        @maxresults = maxresults
        @sort = sort
        @x_plex_container_size = x_plex_container_size
        @x_plex_container_start = x_plex_container_start
      end
    end
  end
end
